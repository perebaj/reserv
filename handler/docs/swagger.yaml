openapi: 3.0.0
info:
  title: Reserv API
  description: Reserv API
  version: 1.0.0

servers:
  - url: https://reserv-production.up.railway.app/
    description: Reserv production server
  - url: https://reserv-staging.up.railway.app/
    description: Reserv staging server

tags:
  - name: Properties
    description: API for managing property listings
  - name: Images
    description: API for managing images

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Booking:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        property_id:
          type: string
          format: uuid
          example: "c5d2de3c-b880-4f47-a989-7a7b1e3c9e55"
        guest_id:
          type: string
          example: "user_2KFLQkwP9GkJDJLUiShFi8RK2Vb"
        check_in_date:
          type: string
          format: date
          example: "2025-06-15"
        check_out_date:
          type: string
          format: date
          example: "2025-06-20"
        total_price_cents:
          type: number
          format: integer
          example: 52050
        currency:
          type: string
          example: "BRL"
        created_at:
          type: string
          format: date-time
          example: "2025-05-15T14:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-15T14:30:00Z"

    CreateBooking:
      type: object
      properties:
        property_id:
          type: string
          format: uuid
          description: Unique identifier for the property
        guest_id:
          type: string
          description: Unique identifier for the guest
          example: "user_2KFLQkwP9GkJDJLUiShFi8RK2Vb"
        check_in_date:
          type: string
          format: date
          description: Check-in date
        check_out_date:
          type: string
          format: date
          description: Check-out date
        total_price_cents:
          type: number
          format: integer
        currency:
          type: string
          description: Currency code (e.g., USD, BRL)
      required:
        - property_id
        - guest_id
        - check_in_date
        - check_out_date

    CreateProperty:
      type: object
      properties:
        title:
          type: string
          description: Title of the property
        description:
          type: string
          description: Description of the property
        price_per_night_cents:
          type: integer
          description: Price per night in cents
          example: 10000
        currency:
          type: string
          description: Currency code (e.g., USD, BRL)
          example: USD
        host_id:
          type: string
          description: Unique identifier for the host
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - title
        - description
        - price_per_night_cents
        - currency
        - host_id
        - updated_at
        - created_at
    ReturnProperty:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the property
        host_id:
          type: string
          description: Unique identifier for the host
        title:
          type: string
          description: Title of the property
        description:
          type: string
          description: Description of the property
        price_per_night_cents:
          type: integer
          description: Price per night in cents
        currency:
          type: string
          description: Currency code (e.g., USD, BRL)
        amenities:
          type: array
          items:
            $ref: '#/components/schemas/Amenity'
        images:
          type: array
          items:
            $ref: '#/components/schemas/PropertyImage'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - host_id
        - title
        - description
        - price_per_night_cents
        - currency
        - updated_at

    Amenity:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the amenity
        name:
          type: string
          description: Name of the amenity
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - created_at

    CreatePropertyAmenity:
      type: object
      properties:
        property_id:
          type: string
          format: uuid
          description: Unique identifier for the property

    CreatePropertyImage:
      type: object
      properties:
        property_id:
          type: string
          format: uuid
          description: Unique identifier for the property
        host_id:
          type: string
          description: Unique identifier for the host
      required:
        - property_id
        - host_id

    PropertyImage:
      type: object
      properties:
        id:
          type: string
          description: Cloudflare image ID
        host_id:
          type: string
          description: Unique identifier for the host
        created_at:
          type: string
          format: date-time
        property_id:
          type: string
          format: uuid
          description: Unique identifier for the property
        cloudflare_id:
          type: string
          format: uuid
        filename:
          type: string
          description: Filename of the image
      required:
        - id
        - host_id
        - property_id
        - cloudflare_id
        - filename
        - created_at

    ReturnPropertyImage:
      type: object
      properties:
        cloudflare_id:
          type: string
          format: uuid
          description: Unique identifier for the image
        filename:
          type: string
          description: Filename of the image
      required:
        - cloudflare_id
        - filename


    APIError:
      type: object
      properties:
        message:
          type: string
          description: Error message
        details:
          type: string
          description: Detailed error information
        status:
          type: integer
          description: HTTP status code
      required:
        - message
        - status

paths:
  /bookings:
    post:
      security:
        - bearerAuth: []
      tags:
        - Bookings
      summary: Create a new booking
      description: Creates a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBooking'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: property_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: guest_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
      tags:
        - Bookings
      summary: List all bookings
      description: Returns a list of all bookings
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /bookings/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Bookings
      summary: Get a booking by ID
      description: Returns a booking by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Bookings
      summary: Delete a booking by ID
      description: Deletes a booking by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Booking deleted successfully
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /properties:
    get:
      security:
        - bearerAuth: []
      tags:
        - Properties
      summary: List all properties
      description: Returns a list of all properties with their amenities
      parameters:
        - name: host_id
          in: query
          required: false
          schema:
            type: string
          description: Filter properties by host ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReturnProperty'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

    post:
      security:
        - bearerAuth: []
      tags:
        - Properties
      summary: Create a new property
      description: Creates a new property listing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProperty'
      responses:
        '201':
          description: Property created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /properties/{id}/amenities:
    post:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Properties
      summary: Relationate an amenity to a property
      description: Relationate an amenity to a property
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                example: "wifi"
      responses:
        '200':
          description: Amenity relationated to property successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /properties/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: Property ID

    get:
      security:
        - bearerAuth: []
      tags:
        - Properties
      summary: Get property by ID
      description: Returns a single property by its ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnProperty'
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

    put:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Properties
      summary: Update property
      description: Updates an existing property
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProperty'
      responses:
        '200':
          description: Property updated successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

    delete:
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Properties
      summary: Delete property
      description: Deletes a property and its associated amenities
      responses:
        '200':
          description: Property deleted successfully
        '404':
          description: Property not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /images/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid

    delete:
      security:
        - bearerAuth: []
      tags:
        - Images
      summary: Delete an image
      description: Deletes an image by its ID
      responses:
        '200':
          description: Image deleted successfully
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /images:
    post:
      security:
        - bearerAuth: []
      tags:
        - Images
      summary: Upload an image and associate it with a property and a host
      description: Uploads an image to Cloudflare Images and associates it with a property and a host
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                property_id:
                  type: string
                  format: uuid
                host_id:
                  type: string
                  format: uuid
                file:
                  type: string
                  format: binary
                  description: Upload an image and associate it with a property and a host
      responses:
        '201':
          description: Image uploaded successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /amenities:
    get:
      tags:
        - Amenities
      summary: List all amenities
      description: Returns a list of all amenities
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Amenity'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /protected:
    get:
      security:
        - bearerAuth: []
      tags:
        - Protected
      summary: Protected route
      description: Protected route
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
